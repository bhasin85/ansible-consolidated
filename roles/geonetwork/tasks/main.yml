
# assume have postgres

# We want to parametize this...
# actually lets just run it up and copy the db?

# actually why not split it up into different tasks - then can factor out the war deployment...
# from everything else...

# or we drive it with variables...

  - apt: name=tomcat7 update_cache=yes

  # jdbc libs
  - file: path=/var/lib/tomcat7/lib/ state=directory owner=tomcat7
  - copy: src=postgresql-9.1-901.jdbc4.jar dest=/var/lib/tomcat7/lib/ owner=tomcat7
  - copy: src=postgis-jdbc-1.3.3.jar       dest=/var/lib/tomcat7/lib/ owner=tomcat7

  # jndi
  - template: src=context.j2 dest=/etc/tomcat7/context.xml owner=tomcat7
    notify: restart-tomcat7

  # tomcat opts
  - template: src=tomcat7.j2 dest=/etc/default/tomcat7 owner=tomcat7
    notify: restart-tomcat7

  # config-overrides
  - file: path=/var/lib/tomcat7/overrides/ state=directory owner=tomcat7
  - template: src=config-overrides.j2 dest=/var/lib/tomcat7/overrides/config-overrides.xml owner=tomcat7
  - template: src=log4j-overrides.j2 dest=/var/lib/tomcat7/overrides/log4j-overrides.xml owner=tomcat7

  # TODO permissions - make sure tomcat owns everything-

  # geonetwork_data directory
  - file: path=/var/lib/tomcat7/geonetwork_data/ state=directory owner=tomcat7 group=tomcat7
  - file: path=/var/lib/tomcat7/geonetwork_data/config state=directory owner=tomcat7 group=tomcat7

  # TODO make war source configurable
  # geonetwork war
  - get_url: url=https://jenkins.aodn.org.au/job/geonetwork_prod/lastSuccessfulBuild/artifact/web/target/geonetwork.war
      dest=/var/lib/tomcat7/webapps/geonetwork.war
    notify: restart-tomcat7


  # Schema plugins
  # https://github.com/ansible/ansible/issues/7474
  - shell: ssh-keyscan github.com >> /etc/ssh/ssh_known_hosts creates=/etc/ssh/ssh_known_hosts
  # TODO change owner?
  - git: repo=https://github.com/aodn/schema-plugins  dest=/var/lib/tomcat7/aodn-sp version=master
  - file: path=/var/lib/tomcat7/aodn-sp owner=tomcat7 group=tomcat7 recurse=yes


  - git: repo=https://github.com/aodn/core-geonetwork dest=/var/lib/tomcat7/aodn-core-gn-sp version=2.10.x-imos recursive=no
  - file: path=/var/lib/tomcat7/aodn-core-gn-sp owner=tomcat7 group=tomcat7 recurse=yes

  - shell: chdir=/var/lib/tomcat7 creates=ansible-schema-plugins-deployed {{item}}
    with_items:
      - mkdir ./geonetwork_data/config/schema_plugins
      - rm -rf ./geonetwork_data/config/schema_plugins/*
      - ln -s $(pwd)/aodn-core-gn-sp/web/src/main/webapp/WEB-INF/data/config/schema_plugins/iso19139 $(pwd)/geonetwork_data/config/schema_plugins
      - ln -s $(pwd)/aodn-sp/iso19139.mcp      $(pwd)/geonetwork_data/config/schema_plugins
      - ln -s $(pwd)/aodn-sp/iso19139.mcp-2.0  $(pwd)/geonetwork_data/config/schema_plugins
      - ln -s $(pwd)/aodn-sp/iso19139.anzlic   $(pwd)/geonetwork_data/config/schema_plugins
      - ln -s $(pwd)/aodn-sp/iso19135          $(pwd)/geonetwork_data/config/schema_plugins
      - "chown -R tomcat7: ./geonetwork_data/config/schema_plugins"
      - touch ansible-schema-plugins-deployed


  # thesauri
  #- copy: src=codelist dest=/var/lib/tomcat7/geonetwork_data/config/ owner=tomcat7

  # TODO owner/perms
  # Ughh http://stackoverflow.com/questions/28778738/ansible-mode-755-for-directories-and-644-for-files-recursively
  - git: repo=https://github.com/aodn/codelist dest=/var/lib/tomcat7/geonetwork_data/config/codelist version=master force=yes
  - file: path=/var/lib/tomcat7/geonetwork_data/config/codelist owner=tomcat7 group=tomcat7 recurse=yes

  # Ughh Gn writes the vocabulary files updaing the publish date, and schema order  



