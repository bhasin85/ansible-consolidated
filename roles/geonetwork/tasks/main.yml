
# TODO remove request table from gn.


    # - java?
    # postgres?

    # - include: tasks/oracle-java.yml

    - apt: name=tomcat7 update_cache=yes

    # tomcat jndi
    - template: src=context.j2 dest=/etc/tomcat7/context.xml owner=tomcat7

    # tomcat args
    - template: src=tomcat7.j2 dest=/etc/default/tomcat7 owner=tomcat7


    # jdbc drivers
    - file: path=/var/lib/tomcat7/lib/ state=directory owner=tomcat7

    - copy: src=postgresql-9.1-901.jdbc4.jar dest=/var/lib/tomcat7/lib/ owner=tomcat7

    - copy: src=postgis-jdbc-1.3.3.jar       dest=/var/lib/tomcat7/lib/ owner=tomcat7

    # postgres and gn database
    - apt: name=postgresql-9.4-postgis-2.1

# use a block in file? 

#    - template: src=db.j2 dest=/tmp/db.sql
#
#    - command: psql -d postgres -f /tmp/db.sql
#      become: yes
#      become_user: postgres

    # overides
    - file: path=/var/lib/tomcat7/overrides/ state=directory owner=tomcat7

    - template: src=config-overrides.j2 dest=/var/lib/tomcat7/overrides/config-overrides.xml owner=tomcat7

    - template: src=log4j-overrides.j2 dest=/var/lib/tomcat7/overrides/log4j-overrides.xml owner=tomcat7


    # TODO permissions - make sure tomcat owns everything-

    # geonetwork_data directory
    - file: path=var/lib/tomcat7/geonetwork_data/ state=directory owner=tomcat7


    # geonetwork war
    - command: sh -c "wget 'https://jenkins.aodn.org.au/job/geonetwork_prod/lastSuccessfulBuild/artifact/web/target/geonetwork.war' -O /var/lib/tomcat7/webapps/geonetwork.war" creates=/var/lib/tomcat7/webapps/geonetwork.war


    - apt: name=locales
    - locale_gen: name=en_AU.UTF-8 state=present


    # using files and register variables to communicate is horrid
    # restore the db
    # - shell: creates=/var/lib/postgresql/ansible-done-db-create {{item}}
    #  become: yes
    #  become_user: postgres

    # can't see how to combine multiline shell commands with args... so use 

    # tomcat needs to be stopped, but can't do this with postgres user uggh.
    - name: Fresh Geonetwork Database
      shell: creates=/var/lib/postgresql/ansible-created-fresh-db {{item}}
      become: yes
      become_user: postgres
      with_items: 
        - psql -d postgres -c "drop database if exists geonetwork"
        - | 
          psql -d postgres -c "
            drop user if exists geonetwork;
            create user geonetwork password 'geonetwork';
            " 
        - psql -d postgres -c "create database geonetwork owner geonetwork"
        - psql -d geonetwork -c "create extension postgis"
        - touch /var/lib/postgresql/ansible-created-fresh-db
      when: false
        

    # communication is actually kind of horrid
    # copy db from host
    - copy: src=gn.dump dest=/tmp

    # restore the db
    - name: Restore Geonetwork db
      shell: creates=/var/lib/postgresql/ansible-done-restore {{item}}
      become: yes
      become_user: postgres
      with_items:
        - psql -d postgres -c "drop database if exists geonetwork"
        - | 
          psql -d postgres -c "
            drop user if exists geonetwork;
            create user geonetwork password 'geonetwork';
            " 
        - pg_restore -d postgres -x -C /tmp/gn.dump
        - | 
          psql -d geonetwork -c "
            insert into users(id, name, username, profile, password) 
            values(124, 'admin', 'admin', 'Administrator', '46e44386069f7cf0d4f2a420b9a2383a612f316e2024b0fe84052b0b96c479a23e8a0be8b90fb8c2')
            "
        - touch /var/lib/postgresql/ansible-done-restore
      when: true 


    # Schema plugins
    # https://github.com/ansible/ansible/issues/7474 
    - shell: ssh-keyscan github.com >> /etc/ssh/ssh_known_hosts creates=/etc/ssh/ssh_known_hosts

    # TODO change owner?
    - git: repo=https://github.com/aodn/schema-plugins  dest=/var/lib/tomcat7/aodn-sp version=master

    - git: repo=https://github.com/aodn/core-geonetwork dest=/var/lib/tomcat7/aodn-core-gn-sp version=2.10.x-imos recursive=no 

    - shell: chdir=/var/lib/tomcat7 creates=ansible-schema-plugins-deployed {{item}}
      with_items:
        - mkdir -p ./geonetwork_data/config/schema_plugins
        - rm -rf ./geonetwork_data/config/schema_plugins/*
        - ln -s $(pwd)/aodn-core-gn-sp/web/src/main/webapp/WEB-INF/data/config/schema_plugins/iso19139 $(pwd)/geonetwork_data/config/schema_plugins
        - ln -s $(pwd)/aodn-sp/iso19139.mcp      $(pwd)/geonetwork_data/config/schema_plugins
        - ln -s $(pwd)/aodn-sp/iso19139.mcp-2.0  $(pwd)/geonetwork_data/config/schema_plugins
        - ln -s $(pwd)/aodn-sp/iso19139.anzlic   $(pwd)/geonetwork_data/config/schema_plugins
        - ln -s $(pwd)/aodn-sp/iso19135          $(pwd)/geonetwork_data/config/schema_plugins
        - "chown -R tomcat7: ./geonetwork_data/config/schema_plugins"
        - touch ansible-schema-plugins-deployed


    # OK, need to try and see the vocab picker 
    # which means getting vocab installed.


# csw-record   iso19110         iso19135         iso19139.mcp      labels.xsd
# dublin-core  iso19115         iso19139         iso19139.mcp-1.4  README
# fgdc-std     iso19115-1-2013  iso19139.anzlic  iso19139.mcp-2.0
#    https://github.com/aodn/schema-plugins


