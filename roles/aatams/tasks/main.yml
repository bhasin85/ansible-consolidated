
# assume have postgres 

# just about hoist this up into the aatams node?

  - apt: name=tomcat7 update_cache=yes

  # TODO maybe move into the node definition
  # port forward to tomcat7
  - apt: name=iptables-persistent
  - blockinfile:
      dest: /etc/iptables-rules
      create: true
      content: |
        iptables --flush PREROUTING -t nat
        iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080
    notify: reconfigure-iptables

    # TODO tidy paths, put aatams_data in conf...


  # jndi
  - template: src=context.j2 dest=/etc/tomcat7/context.xml owner=tomcat7
    notify: restart-tomcat7

  # tomcat opts
  - template: src=tomcat7.j2 dest=/etc/default/tomcat7 owner=tomcat7
    notify: restart-tomcat7

  # data directory
  - file: path=/var/lib/tomcat7/aatams_data state=directory owner=tomcat7

  # grails config
  - template: src=aatams.groovy.j2 dest=/var/lib/tomcat7/aatams_data/aatams.groovy owner=tomcat7
    notify: restart-tomcat7

  # war
  # TODO owner - use file?
  - get_url: url=https://jenkins.aodn.org.au/job/aatams_prod/lastSuccessfulBuild/artifact/target/aatams-3.15.0.war
      dest=/var/lib/tomcat7/webapps/aatams.war
    notify: restart-tomcat7


  # check for database
  - shell: psql -tAc "select 1 from pg_database where datname='aatams'"
    become: yes
    become_user: postgres
    register: have_aatams_db
    changed_when: false


  # fresh database
  - shell: "{{item}}"
    become: yes
    become_user: postgres
    with_items:
      - |
        psql -d postgres -c "
          drop user if exists aatams;
          create user aatams unencrypted password 'aatams';
          "
      - psql -d postgres -c "create database aatams owner aatams"
      - |
        psql -d aatams -c "
          create extension postgis;
          create schema aatams authorization aatams;
          alter database aatams set search_path to 'aatams','public';
          "
    when: have_aatams_db.stdout != "1"

