
- hosts: dell-work
  vars_files:
    - ../vars/testing.yml
    - ../vars/credentials.yml
  vars:
    - printer:
        name: ImosLexmark
        url: socket://10.76.8.20:9100
        ppd: lexmark.ppd
    - users:
      - { name: meteo, group: adm, pubkey: "{{meteo_pubkey}}" }
    - jdk_deploy_path: /home/meteo
    - grails_deploy_path: /home/meteo
  roles:
    - debian
    - timezone
    - locale
    - common
    - meteo-dotfiles
    - ip-forwarding
    - printer
    - vim

  # TODO jdk, grails, intelij should be factored into roles
  # - not necessarily. simple tasks are fairly easy to manage...
  # - roles factor common code amongst nodes and have cleaner relative path semantics

  tasks:

    - hostname: name=dell-work

    #####
    - apt: name=memtest86

    #####
    - apt: name=alsa-oss
    - apt: name=alsa-utils
    - apt: name=alsa-tools

    - copy:
        dest: /etc/modprobe.d/alsa-base.conf
        content: |
          # deployed by ansible!
          # hdmi and cth reversed
          options snd_hda_intel enable=0,1

          # hardware beep off
          options snd_hda_intel beep_mode=0
          blacklist pcspkr
      notify: reboot

    - copy:
        dest: /etc/modprobe.d/zfs.conf
        content: |
          # deployed by ansible!
          # see, http://serverfault.com/questions/581669/why-isnt-the-arc-max-setting-honoured-on-zfs-on-linux
          options zfs zfs_arc_max=34359738368
      notify: reboot


    - name: Initialize alsa
      # command: bash -c "/usr/sbin/alsactl"
      command: /usr/sbin/alsactl
      args:
        creates: /var/lib/alsa/asound.state
      notify: reboot

    #####
    - apt: name=firmware-iwlwifi

    - modprobe: name=iwlwifi state=present

    # TODO make idempotent or remove - perhaps ansible has interface module?
    # Not sure we even need, since should bring up automatically
    # -  command: /sbin/ifconfig wlp2s0 up

    - apt: name=wpasupplicant
    - apt: name=wicd-curses

    #####
    - copy:
        dest: /home/meteo/.xinitrc
        content: |
          # deployed by ansible!
          xrdb -merge <<- EOF
            XTerm*selectToClipboard: true
            XTerm*faceName: DejaVu Sans Mono
            XTerm*faceSize: 10 ! desktop
            ! XTerm*faceSize: 15   ! laptop
            XTerm*Background: white
            XTerm*Foreground: black
          EOF

          xmodmap - <<- EOF
            keycode 90 = Insert NoSymbol Insert
          EOF

          # seems to be necessary, to let xorg initialize before adjusting resolution
          sleep 2

          if true; then
            # Warning - turns off laptop display!
            xrandr --output DP-1-1  --auto --mode 1920x1200 --primary
            xrandr --output DP-1-2  --auto --mode 1280x1024 --right-of DP-1-1
            xrandr --output eDP-1   --off
          fi

          # xrandr --output eDP1 --brightness .65
          # xset -dpms; xset s off
          # to turn on trackpad tap to select/button
          synclient TapButton1=1
          xset b off
          # xset q | grep bell
          xmonad

    ####
    - copy:
        dest: /home/meteo/restart-monitor2.sh
        mode: 0777
        content: |
          #!/bin/bash
          # deployed by ansible!
          xrandr --output DP-1-2  --off
          sleep 1
          xrandr --output DP-1-2  --auto --mode 1280x1024 --right-of DP-1-1
          sleep 1

    ####
    - copy:
        dest: /ansible/log-screensaver.sh
        mode: 0777
        content: |
          #!/bin/bash
          # deployed by ansible!
          LOG=/var/log/xtrlock.log

          # handle empty starting file condition
          [ -f "$LOG" ] || echo 'UNKNOWN' >> "$LOG"

          LOCKED=$(pgrep xtrlock)
          CURRENT=$(tail -n 1 "$LOG" | cut -d' ' -f 1) # '

          # echo "LOCKED: $LOCKED, CURRENT: $CURRENT"
          # not locked, and current condition not UNLOCKED
          if [ -z "$LOCKED" ] && [ "$CURRENT" != 'UNLOCKED' ]; then
              echo "UNLOCKED $(date)" >> "$LOG"
          fi
          # locked, and current condition is not LOCKED
          if [ -n "$LOCKED" ] && [ "$CURRENT" != 'LOCKED' ]; then
              echo "LOCKED   $(date)" >> "$LOG"
          fi

    - copy:
        dest: /var/spool/cron/crontabs/root
        mode: 0600
        content: |
          # deployed by ansible!
          */1 * * * *  /ansible/log-screensaver.sh



    #####
    # local changes not in dotfiles for .bashrc
    - blockinfile:
        dest: /home/meteo/.bash_aliases
        insertafter: EOF
        content: |
          export I=$HOME/imos
          alias i="cd $I"

          export BERKS_HOME=$HOME/.chefdk/gem/ruby/2.1.0/
          export PATH="$BERKS_HOME/bin:$PATH"

          export JAVA_HOME=$I/jdk1.7.0_80/
          export PATH="$JAVA_HOME/bin:$PATH"

          export GRAILS_HOME=$I/grails-1.3.7/
          export PATH="$PATH:$GRAILS_HOME/bin"

          export INTELLIJ_HOME=$I/idea-IU-143.1821.5/
          export PATH="$PATH:$INTELLIJ_HOME/bin"

    #####
    - apt: name=bridge-utils

    - copy:
        dest: /etc/network/interfaces
        content: |
          # deployed by ansible!
          # The loopback network interface
          auto lo
          iface lo inet loopback

          # The primary network interface
          allow-hotplug eth0
          iface eth0 inet dhcp

          auto br0
          iface br0 inet static
            address 10.1.1.1
            netmask 255.255.255.0
            bridge_ports dummy0
            bridge_stp off
            bridge_fd 0
      notify: restart-br0

#    # Using local dnsmasq as a wholesale replacement for using resolvconf is a lot simpler
#    # issue is we want to ping containers from the host,
#    # so make local dns authoritative
#    - apt: name=dnsmasq
#    - copy:
#        dest: /etc/dnsmasq.d/localnet
#        content: |
#          # deployed by ansible!
#          interface=br0
#          # log-queries
#          log-dhcp
#          no-resolv
#          server=131.217.0.19
#          server=144.6.0.19
#          expand-hosts
#          domain=localnet
#          dhcp-range=br0,10.1.1.10,10.1.1.30,4h

#          # systemd containers
#          dhcp-host=00:01:04:1b:2C:0A,wordpress,10.1.1.10
#          dhcp-host=00:01:04:1b:2C:0B,geoserver,10.1.1.11
#          dhcp-host=00:01:04:1b:2C:1A,jessie,10.1.1.12
#          dhcp-host=00:01:04:1b:2C:1B,geonetwork2,10.1.1.13
#          dhcp-host=00:01:04:1b:2C:1C,portal,10.1.1.14
#          dhcp-host=00:01:04:1b:2C:1D,aatams,10.1.1.15
#          dhcp-host=00:01:04:1b:2C:1E,rev-proxy,10.1.1.16
#          dhcp-host=00:01:04:1b:2C:1F,geonetwork3,10.1.1.17
#          dhcp-host=00:01:04:1b:2C:10,bind,10.1.1.22

#          # kvm guests
#          dhcp-host=00:01:04:1b:2C:2A,5-aws-syd,10.1.1.18
#          dhcp-host=00:01:04:1b:2C:2B,6-aws-syd,10.1.1.19
#          dhcp-host=00:01:04:1b:2C:2C,win7,10.1.1.20
#          dhcp-host=00:01:04:1b:2C:2D,10-aws-syd,10.1.1.21

#      notify: restart-dnsmasq

# TODO - this doesn't clear the file first
# maybe change nameserver to 127.0.0.1
# also add domain, search?
#    - copy:
#        dest: /etc/resolv.conf
#        content: |
#          # deployed by ansible!
#          nameserver 10.1.1.1
#          # nameserver 10.1.1.22
#          # nameserver 8.8.8.8
#          # nameserver 131.217.0.19   # utas


    # IMPORTANT for complete files not just blocks, could simply use shell maybe with <<-EOF type stuff
    # disable /etc/resolv.conf update on dhcpd
    # http://unix.stackexchange.com/questions/174349/what-overwrites-etc-resolv-conf-on-every-boot
    - copy:
        dest: /etc/dhcp/dhclient-enter-hooks.d/nodnsupdate
        mode: 0777
        content: |
          #!/bin/sh
          # deployed by ansible!
          make_resolv_conf() {
              :
          }


    ########################################################
    # bind
    # problem with rndc.key  solved by purge bind9 and reinstall
    - apt: name=bind9

    - file: path=/etc/bind/zones state=directory owner=root group=bind

    # named configuration
    - copy:
        dest: /etc/bind/named.conf.options
        backup: yes
        content: |
          # deployed by ansible!
          options {
            directory "/var/cache/bind";
            forwarders {
              8.8.8.8;
            };
            dnssec-validation auto;
            auth-nxdomain no;    # conform to RFC1035
            listen-on-v6 { any; };
          };
      notify: restart-bind

    # zones
    - copy:
        dest: /etc/bind/named.conf.local
        backup: yes
        content: |
          # deployed by ansible!
          zone "aodn.org.au" {
            type master;
            file "/etc/bind/zones/aodn.db";
          };

          # zone "animaltracking.aodn.org.au" {
          #  type master;
          #  file "/etc/bind/zones/animaltracking.aodn.db";
          #};

          zone "localnet" {
            type master;
            file "/etc/bind/zones/localnet.db";
          };

          # zone "jenkins.aodn.org.au" {
          #  type master;
          #  file "/etc/bind/zones/jenkins.aodn.db";
          # };



      notify: restart-bind

    # localnet zone
    - copy:
        dest: /etc/bind/zones/localnet.db
        owner: root
        group: bind
        content: |
          ; deployed by ansible!
          ;
          $TTL 60
          $ORIGIN localnet.
          @             IN SOA ns1 mail ( 2001062501 21600 3600 604800 86400 )
          @             IN NS ns1
          @             IN NS ns2
          @             IN A 10.1.1.1
          ; @           IN AAAA ::1
          @             IN MX 10 10.1.1.1

          dell-work     IN A 10.1.1.1

          ; systemd-d containers
          geonetwork2   IN A 10.1.1.13
          aatams-vm     IN A 10.1.1.14
          aatams        IN A 10.1.1.15
          rev-proxy     IN A 10.1.1.16
          win7          IN A 10.1.1.20
          postgres      IN A 10.1.1.21

          precise       IN A 10.1.1.17

          ; kvm/chef
          jenkins       IN A 10.1.1.22
          systest       IN A 10.1.1.23
          data-services IN A 10.1.1.24

          ; mcp2-0.docs IN CNAME mcp-profile-docs.readthedocs.io.
          mail          IN A 10.1.1.1
          ns1           IN A 192.168.1.1
          ns2           IN A 192.168.1.2
      notify: restart-bind

    # it's difficult to overide single entries, sinece the zone is
    # authoritative and cannot be delegated...
    # aodn.org.au zone
    - copy:
        dest: /etc/bind/zones/aodn.db
        owner: root
        group: bind
        content: |
          ; deployed by ansible!
          ;
          $TTL 60
          @ IN SOA ns1.aodn.org.au. root.aodn.org.au. (
            2001062501 ; serial
            21600      ; refresh after 6 hours
            3600       ; retry after 1 hour
            604800     ; expire after 1 week
            86400 )    ; minimum TTL of 1 day
          ;
          @ IN NS ns1.aodn.org.au.
          @ IN NS ns2.aodn.org.au.
          @ IN A 192.168.1.1
          @ IN AAAA ::1

          ; ok, simple cname redirect
          mcp2              60 IN CNAME mcp-profile-docs.readthedocs.io.

          ; redirect to our reverse proxy, in front of everything
          content           60 IN CNAME rev-proxy.localnet.

          ; portal          60 IN CNAME 7-aws-syd.emii.org.au.
          ; geoserver-123   60 IN CNAME 1-aws-syd.emii.org.au.
          ; aatams          60 IN CNAME aatams.localnet.
          ; animaltracking  60 IN CNAME aatams.localnet.

          ; this is really crap, we need jenkins, in order to be able to pull artifacts,
          catalogue-systest 60 IN CNAME systest.localnet.
          portal-systest    60 IN CNAME systest.localnet.
          geoserver-systest 60 IN CNAME systest.localnet.
          ; jenkins           60 IN CNAME jenkins.localnet.

          jenkins           60 IN CNAME 15-aws-syd.emii.org.au.
          binary            60 IN CNAME dnebqw4820yi3.cloudfront.net.

          @ MX 10 mail.aodn.org.au.
          mail IN A 192.168.1.1
          ns1 IN A 192.168.1.1
          ns2 IN A 192.168.1.2
      notify: restart-bind


    # APEX record,
    # how to do a single override. Easy. But needs a specific entry for each one.
    # http://serverfault.com/questions/223850/override-a-dns-record-using-bind9

    # ; @     IN CNAME  aatams.localnet.  ; cname apex will be rejected
    # ; 15    IN  PTR   aatams.aodn.org.au.  ; PTR record won't work without upstream ns


    # jenkins
    - copy:
        dest: /etc/bind/zones/jenkins.aodn.db
        owner: root
        group: bind
        content: |
          ; deployed by ansible!
          ;
          $TTL 60   ; default
          $ORIGIN jenkins.aodn.org.au. ; default
          @     IN SOA ns0 postmaster ( 2001062501 21600 3600 604800 86400 )
          @     IN NS ns0
          @     IN A 10.1.1.22
          ns0   IN A 129.0.0.1
      notify: restart-bind

    # geonetwork
    # if want to do multiple geonetworks then we need to use the aodn namespace...
    # there must be a way to perform easier delegation

    # We can write a simple DNS resolver, more easily that than tyring to get bind9
    # to be authoritative and to delegate


    # animal tracking
    - copy:
        dest: /etc/bind/zones/animaltracking.aodn.db
        owner: root
        group: bind
        content: |
          ; deployed by ansible!
          ;
          $TTL 60   ; default
          $ORIGIN animaltracking.aodn.org.au.
          @     IN SOA ns0 postmaster ( 2001062501 21600 3600 604800 86400 )
          @     IN NS ns0
          @     IN A 10.1.1.14
          ns0   IN A 129.0.0.1
      notify: restart-bind



    # dhcp
    - apt: name=isc-dhcp-server

    - copy:
        dest: /etc/default/isc-dhcp-server
        owner: root
        group: root
        backup: yes
        content: |
          # deployed by ansible!
          INTERFACESv4="br0"
          INTERFACESv6=""
      notify: restart-dhcp

    - copy:
        dest: /etc/dhcp/dhcpd.conf
        owner: root
        group: root
        backup: yes
        content: |
          # deployed by ansible!

          authoritative;

          option domain-name "localnet";
          # option domain-name-servers 131.217.38.36, 8.8.4.4;
          option domain-name-servers 10.1.1.1;

          # Set up our desired subnet:
          # http://jodies.de/ipcalc?host=10.1.1.0&mask1=24&mask2=
          subnet 10.1.1.0 netmask 255.255.255.0 {
              interface "br0";
              range 10.1.1.10  10.1.1.30;
              option subnet-mask 255.255.255.0;
              option broadcast-address 10.1.1.255;
              option routers 10.1.1.1;
              option domain-name-servers 10.1.1.1;

              # kvm/chef instances
              host jenkins        { hardware ethernet 00:01:04:1b:3C:01; fixed-address 10.1.1.22; }   # 15-aws-syd
              host precise        { hardware ethernet 00:01:04:1b:3C:00; fixed-address 10.1.1.17; }
              host win7           { hardware ethernet 00:01:04:1b:2C:2C; fixed-address 10.1.1.20; }
              host systest        { hardware ethernet 00:01:04:1b:3C:23; fixed-address 10.1.1.23; }   # 6-aws-syd
              host data-services  { hardware ethernet 00:01:04:1b:3C:24; fixed-address 10.1.1.24; }   # 6-aws-syd

              # system-d container instances
              host geonetwork2    { hardware ethernet 00:01:04:1b:2C:1B; fixed-address 10.1.1.13; }
              host rev-proxy      { hardware ethernet 00:01:04:1b:2C:1E; fixed-address 10.1.1.16; }
              host postgres       { hardware ethernet 00:01:04:1b:2C:2D; fixed-address 10.1.1.21; }
              host aatams-vm      { hardware ethernet 00:01:04:1b:3C:00; fixed-address 10.1.1.14; }
              host aatams         { hardware ethernet 00:01:04:1b:2C:1D; fixed-address 10.1.1.15; }
          }

          default-lease-time 600;
          max-lease-time 7200;
          # Show that we want to be the only DHCP server in this network:
          authoritative;
      notify: restart-dhcp




    # cat /proc/sys/net/ipv4/conf/lo/route_localnet
    # sysctl -w net.ipv4.conf.lo.route_localnet=1
    - apt: name=iptables-persistent
    - copy:
        dest: /etc/iptables-rules
        content: |
          # deployed by ansible
          iptables -t filter --flush
          iptables -t nat --flush
          iptables -t mangle --flush

          # redirect to rev-proxy
          # iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080
          iptables -t nat -A PREROUTING -p tcp -i eth0          --dport 80 -j DNAT --to 10.1.1.22
          iptables -t nat -A OUTPUT     -p tcp -d 131.217.38.36 --dport 80 -j DNAT --to 10.1.1.22

          # dns/bind/dnsmasq
          # iptables -t nat -A PREROUTING -p tcp -i eth0 --dport 53 -j DNAT --to 10.1.1.22
          # iptables -t nat -A PREROUTING -p udp -i eth0 --dport 53 -j DNAT --to 10.1.1.22

          # this works, except that the containerized bind gets mixes up the interface it thinks its listening on
          # redirect for incoming via prerouting, and for the destination
          # doesn't quite work
          # iptables -t nat -A OUTPUT     -p tcp -d 131.217.38.36 --dport 53 -j DNAT --to 10.1.1.22
          # iptables -t nat -A OUTPUT     -p udp -d 131.217.38.36 --dport 53 -j DNAT --to 10.1.1.22

          # bridge postrouting
          iptables -t nat -A POSTROUTING -s '10.0.0.0/8' -j MASQUERADE

          #####
          # mangle
          # https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=717217
          # TODO - fill in checksums for all udp...
          iptables -t mangle -A POSTROUTING -p udp --dport bootpc -j CHECKSUM --checksum-fill
      notify: reconfigure-iptables

    # make sure systemd is installed
    - apt: name=systemd-container
      when: (ansible_distribution == "Debian" and ansible_distribution_major_version > "8")

    ######
    - apt: name=debootstrap
    - apt: name=maven
    - apt: name=postgresql-client-9.4
    - apt: name=keepassx
    - apt: name=ethtool

    # - include: "./roles/common/tasks/jdk.yml"
    - include: ../roles/misc/tasks/grails-1.3.7.yml
    - include: ../roles/misc/tasks/intellij.yml


    #####
    # Support bridge addif for qemu
    # tunctl from uml-utilities only needed for permissions, not strictly needed
    - apt: name=qemu-kvm
    - apt: name=uml-utilities

    - copy:
        dest: /etc/qemu-ifup
        mode: 0755
        content: |
          #!/bin/sh -x
          # deployed by ansible
          echo "i am $(whoami)"
          switch=br0
          if [ -n "$1" ];then
              # has to be run as root...
              # tunctl -u `whoami` -t $1
              ip link set $1 up
              sleep 0.5s
              brctl addif $switch $1
              exit 0
          else
              ECHO "Error: no interface specified"
              exit 1
          fi

    - copy:
        dest: /etc/qemu-ifdown
        mode: 0755
        content: |
          #!/bin/sh -x
          # deployed by ansible
          switch=br0
          if [ -n "$1" ];then
              # permissions...
              brctl delif $switch $1
              ip link delete $1
              exit 0
          else
              echo "Error: no interface specified"
              exit 1
          fi





  # TODO maybe make handlers explicit
  handlers:
    # - include: ../roles/common/handlers/main.yml

    - name: reconfigure-iptables
      command: "{{item}}"
      with_items:
        - sh /etc/iptables-rules
        - dpkg-reconfigure --frontend noninteractive iptables-persistent

    - name: reboot
      command: /sbin/reboot

    - name: restart-br0
      command: sh -c "/sbin/ifdown br0 && /sbin/ifup br0"

    # - name: restart-dnsmasq
    #  service: name=dnsmasq state=restarted

    - name: restart-bind
      service: name=bind9 state=restarted

    - name: restart-dhcp
      service: name=isc-dhcp-server state=restarted



